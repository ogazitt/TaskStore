//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("TaskStoreModel", "FK_Fields_FieldTypes", "FieldTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TaskStoreAdminClient.FieldType), "Fields", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaskStoreAdminClient.Field), true)]
[assembly: EdmRelationshipAttribute("TaskStoreModel", "FK_Fields_ListTypes", "ListTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TaskStoreAdminClient.ListType), "Fields", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaskStoreAdminClient.Field), true)]
[assembly: EdmRelationshipAttribute("TaskStoreModel", "FK_ListTypes_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TaskStoreAdminClient.User), "ListTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaskStoreAdminClient.ListType), true)]
[assembly: EdmRelationshipAttribute("TaskStoreModel", "FK_TaskLists_ListTypes", "ListTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TaskStoreAdminClient.ListType), "TaskLists", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaskStoreAdminClient.TaskList), true)]
[assembly: EdmRelationshipAttribute("TaskStoreModel", "FK_Tasks_Priorities", "Priorities", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TaskStoreAdminClient.Priority), "Tasks", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaskStoreAdminClient.Task), true)]
[assembly: EdmRelationshipAttribute("TaskStoreModel", "FK_Tags_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TaskStoreAdminClient.User), "Tags", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaskStoreAdminClient.Tag), true)]
[assembly: EdmRelationshipAttribute("TaskStoreModel", "FK_TaskTags_Tags", "Tags", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TaskStoreAdminClient.Tag), "TaskTags", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaskStoreAdminClient.TaskTag), true)]
[assembly: EdmRelationshipAttribute("TaskStoreModel", "FK_TaskLists_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TaskStoreAdminClient.User), "TaskLists", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaskStoreAdminClient.TaskList), true)]
[assembly: EdmRelationshipAttribute("TaskStoreModel", "FK_Tasks_TaskLists", "TaskLists", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TaskStoreAdminClient.TaskList), "Tasks", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaskStoreAdminClient.Task), true)]
[assembly: EdmRelationshipAttribute("TaskStoreModel", "FK_Tasks_TaskLists2", "TaskLists", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TaskStoreAdminClient.TaskList), "Tasks", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaskStoreAdminClient.Task), true)]
[assembly: EdmRelationshipAttribute("TaskStoreModel", "FK_TaskTags_Tasks", "Tasks", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TaskStoreAdminClient.Task), "TaskTags", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaskStoreAdminClient.TaskTag), true)]

#endregion

namespace TaskStoreAdminClient
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class TaskStoreEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new TaskStoreEntities object using the connection string found in the 'TaskStoreEntities' section of the application configuration file.
        /// </summary>
        public TaskStoreEntities() : base("name=TaskStoreEntities", "TaskStoreEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TaskStoreEntities object.
        /// </summary>
        public TaskStoreEntities(string connectionString) : base(connectionString, "TaskStoreEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TaskStoreEntities object.
        /// </summary>
        public TaskStoreEntities(EntityConnection connection) : base(connection, "TaskStoreEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Action> Actions
        {
            get
            {
                if ((_Actions == null))
                {
                    _Actions = base.CreateObjectSet<Action>("Actions");
                }
                return _Actions;
            }
        }
        private ObjectSet<Action> _Actions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Color> Colors
        {
            get
            {
                if ((_Colors == null))
                {
                    _Colors = base.CreateObjectSet<Color>("Colors");
                }
                return _Colors;
            }
        }
        private ObjectSet<Color> _Colors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Field> Fields
        {
            get
            {
                if ((_Fields == null))
                {
                    _Fields = base.CreateObjectSet<Field>("Fields");
                }
                return _Fields;
            }
        }
        private ObjectSet<Field> _Fields;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FieldType> FieldTypes
        {
            get
            {
                if ((_FieldTypes == null))
                {
                    _FieldTypes = base.CreateObjectSet<FieldType>("FieldTypes");
                }
                return _FieldTypes;
            }
        }
        private ObjectSet<FieldType> _FieldTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ListType> ListTypes
        {
            get
            {
                if ((_ListTypes == null))
                {
                    _ListTypes = base.CreateObjectSet<ListType>("ListTypes");
                }
                return _ListTypes;
            }
        }
        private ObjectSet<ListType> _ListTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Priority> Priorities
        {
            get
            {
                if ((_Priorities == null))
                {
                    _Priorities = base.CreateObjectSet<Priority>("Priorities");
                }
                return _Priorities;
            }
        }
        private ObjectSet<Priority> _Priorities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tag> Tags
        {
            get
            {
                if ((_Tags == null))
                {
                    _Tags = base.CreateObjectSet<Tag>("Tags");
                }
                return _Tags;
            }
        }
        private ObjectSet<Tag> _Tags;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TaskList> TaskLists
        {
            get
            {
                if ((_TaskLists == null))
                {
                    _TaskLists = base.CreateObjectSet<TaskList>("TaskLists");
                }
                return _TaskLists;
            }
        }
        private ObjectSet<TaskList> _TaskLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Task> Tasks
        {
            get
            {
                if ((_Tasks == null))
                {
                    _Tasks = base.CreateObjectSet<Task>("Tasks");
                }
                return _Tasks;
            }
        }
        private ObjectSet<Task> _Tasks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TaskTag> TaskTags
        {
            get
            {
                if ((_TaskTags == null))
                {
                    _TaskTags = base.CreateObjectSet<TaskTag>("TaskTags");
                }
                return _TaskTags;
            }
        }
        private ObjectSet<TaskTag> _TaskTags;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Actions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActions(Action action)
        {
            base.AddObject("Actions", action);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Colors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToColors(Color color)
        {
            base.AddObject("Colors", color);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Fields EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFields(Field field)
        {
            base.AddObject("Fields", field);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FieldTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFieldTypes(FieldType fieldType)
        {
            base.AddObject("FieldTypes", fieldType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ListTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToListTypes(ListType listType)
        {
            base.AddObject("ListTypes", listType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Priorities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPriorities(Priority priority)
        {
            base.AddObject("Priorities", priority);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tags EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTags(Tag tag)
        {
            base.AddObject("Tags", tag);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TaskLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTaskLists(TaskList taskList)
        {
            base.AddObject("TaskLists", taskList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tasks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTasks(Task task)
        {
            base.AddObject("Tasks", task);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TaskTags EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTaskTags(TaskTag taskTag)
        {
            base.AddObject("TaskTags", taskTag);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaskStoreModel", Name="Action")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Action : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Action object.
        /// </summary>
        /// <param name="actionID">Initial value of the ActionID property.</param>
        /// <param name="fieldName">Initial value of the FieldName property.</param>
        /// <param name="displayName">Initial value of the DisplayName property.</param>
        /// <param name="actionType">Initial value of the ActionType property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static Action CreateAction(global::System.Int32 actionID, global::System.String fieldName, global::System.String displayName, global::System.String actionType, global::System.Int32 sortOrder)
        {
            Action action = new Action();
            action.ActionID = actionID;
            action.FieldName = fieldName;
            action.DisplayName = displayName;
            action.ActionType = actionType;
            action.SortOrder = sortOrder;
            return action;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActionID
        {
            get
            {
                return _ActionID;
            }
            set
            {
                if (_ActionID != value)
                {
                    OnActionIDChanging(value);
                    ReportPropertyChanging("ActionID");
                    _ActionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ActionID");
                    OnActionIDChanged();
                }
            }
        }
        private global::System.Int32 _ActionID;
        partial void OnActionIDChanging(global::System.Int32 value);
        partial void OnActionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FieldName
        {
            get
            {
                return _FieldName;
            }
            set
            {
                OnFieldNameChanging(value);
                ReportPropertyChanging("FieldName");
                _FieldName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FieldName");
                OnFieldNameChanged();
            }
        }
        private global::System.String _FieldName;
        partial void OnFieldNameChanging(global::System.String value);
        partial void OnFieldNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ActionType
        {
            get
            {
                return _ActionType;
            }
            set
            {
                OnActionTypeChanging(value);
                ReportPropertyChanging("ActionType");
                _ActionType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ActionType");
                OnActionTypeChanged();
            }
        }
        private global::System.String _ActionType;
        partial void OnActionTypeChanging(global::System.String value);
        partial void OnActionTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaskStoreModel", Name="Color")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Color : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Color object.
        /// </summary>
        /// <param name="colorID">Initial value of the ColorID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Color CreateColor(global::System.Int32 colorID, global::System.String name)
        {
            Color color = new Color();
            color.ColorID = colorID;
            color.Name = name;
            return color;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ColorID
        {
            get
            {
                return _ColorID;
            }
            set
            {
                if (_ColorID != value)
                {
                    OnColorIDChanging(value);
                    ReportPropertyChanging("ColorID");
                    _ColorID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ColorID");
                    OnColorIDChanged();
                }
            }
        }
        private global::System.Int32 _ColorID;
        partial void OnColorIDChanging(global::System.Int32 value);
        partial void OnColorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaskStoreModel", Name="Field")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Field : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Field object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="fieldTypeID">Initial value of the FieldTypeID property.</param>
        /// <param name="listTypeID">Initial value of the ListTypeID property.</param>
        /// <param name="isPrimary">Initial value of the IsPrimary property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static Field CreateField(global::System.Guid id, global::System.Int32 fieldTypeID, global::System.Guid listTypeID, global::System.Boolean isPrimary, global::System.Int32 sortOrder)
        {
            Field field = new Field();
            field.ID = id;
            field.FieldTypeID = fieldTypeID;
            field.ListTypeID = listTypeID;
            field.IsPrimary = isPrimary;
            field.SortOrder = sortOrder;
            return field;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FieldTypeID
        {
            get
            {
                return _FieldTypeID;
            }
            set
            {
                OnFieldTypeIDChanging(value);
                ReportPropertyChanging("FieldTypeID");
                _FieldTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FieldTypeID");
                OnFieldTypeIDChanged();
            }
        }
        private global::System.Int32 _FieldTypeID;
        partial void OnFieldTypeIDChanging(global::System.Int32 value);
        partial void OnFieldTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ListTypeID
        {
            get
            {
                return _ListTypeID;
            }
            set
            {
                OnListTypeIDChanging(value);
                ReportPropertyChanging("ListTypeID");
                _ListTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListTypeID");
                OnListTypeIDChanged();
            }
        }
        private global::System.Guid _ListTypeID;
        partial void OnListTypeIDChanging(global::System.Guid value);
        partial void OnListTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPrimary
        {
            get
            {
                return _IsPrimary;
            }
            set
            {
                OnIsPrimaryChanging(value);
                ReportPropertyChanging("IsPrimary");
                _IsPrimary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPrimary");
                OnIsPrimaryChanged();
            }
        }
        private global::System.Boolean _IsPrimary;
        partial void OnIsPrimaryChanging(global::System.Boolean value);
        partial void OnIsPrimaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaskStoreModel", "FK_Fields_FieldTypes", "FieldTypes")]
        public FieldType FieldType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FieldType>("TaskStoreModel.FK_Fields_FieldTypes", "FieldTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FieldType>("TaskStoreModel.FK_Fields_FieldTypes", "FieldTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FieldType> FieldTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FieldType>("TaskStoreModel.FK_Fields_FieldTypes", "FieldTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FieldType>("TaskStoreModel.FK_Fields_FieldTypes", "FieldTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaskStoreModel", "FK_Fields_ListTypes", "ListTypes")]
        public ListType ListType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ListType>("TaskStoreModel.FK_Fields_ListTypes", "ListTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ListType>("TaskStoreModel.FK_Fields_ListTypes", "ListTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ListType> ListTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ListType>("TaskStoreModel.FK_Fields_ListTypes", "ListTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ListType>("TaskStoreModel.FK_Fields_ListTypes", "ListTypes", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaskStoreModel", Name="FieldType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FieldType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FieldType object.
        /// </summary>
        /// <param name="fieldTypeID">Initial value of the FieldTypeID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="displayName">Initial value of the DisplayName property.</param>
        /// <param name="displayType">Initial value of the DisplayType property.</param>
        public static FieldType CreateFieldType(global::System.Int32 fieldTypeID, global::System.String name, global::System.String displayName, global::System.String displayType)
        {
            FieldType fieldType = new FieldType();
            fieldType.FieldTypeID = fieldTypeID;
            fieldType.Name = name;
            fieldType.DisplayName = displayName;
            fieldType.DisplayType = displayType;
            return fieldType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FieldTypeID
        {
            get
            {
                return _FieldTypeID;
            }
            set
            {
                if (_FieldTypeID != value)
                {
                    OnFieldTypeIDChanging(value);
                    ReportPropertyChanging("FieldTypeID");
                    _FieldTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FieldTypeID");
                    OnFieldTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _FieldTypeID;
        partial void OnFieldTypeIDChanging(global::System.Int32 value);
        partial void OnFieldTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DisplayType
        {
            get
            {
                return _DisplayType;
            }
            set
            {
                OnDisplayTypeChanging(value);
                ReportPropertyChanging("DisplayType");
                _DisplayType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DisplayType");
                OnDisplayTypeChanged();
            }
        }
        private global::System.String _DisplayType;
        partial void OnDisplayTypeChanging(global::System.String value);
        partial void OnDisplayTypeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaskStoreModel", "FK_Fields_FieldTypes", "Fields")]
        public EntityCollection<Field> Fields
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Field>("TaskStoreModel.FK_Fields_FieldTypes", "Fields");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Field>("TaskStoreModel.FK_Fields_FieldTypes", "Fields", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaskStoreModel", Name="ListType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ListType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ListType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ListType CreateListType(global::System.Guid id, global::System.String name)
        {
            ListType listType = new ListType();
            listType.ID = id;
            listType.Name = name;
            return listType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Guid> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Guid> value);
        partial void OnUserIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaskStoreModel", "FK_Fields_ListTypes", "Fields")]
        public EntityCollection<Field> Fields
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Field>("TaskStoreModel.FK_Fields_ListTypes", "Fields");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Field>("TaskStoreModel.FK_Fields_ListTypes", "Fields", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaskStoreModel", "FK_ListTypes_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TaskStoreModel.FK_ListTypes_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TaskStoreModel.FK_ListTypes_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TaskStoreModel.FK_ListTypes_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("TaskStoreModel.FK_ListTypes_Users", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaskStoreModel", "FK_TaskLists_ListTypes", "TaskLists")]
        public EntityCollection<TaskList> TaskLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaskList>("TaskStoreModel.FK_TaskLists_ListTypes", "TaskLists");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaskList>("TaskStoreModel.FK_TaskLists_ListTypes", "TaskLists", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaskStoreModel", Name="Priority")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Priority : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Priority object.
        /// </summary>
        /// <param name="priorityID">Initial value of the PriorityID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="color">Initial value of the Color property.</param>
        public static Priority CreatePriority(global::System.Int32 priorityID, global::System.String name, global::System.String color)
        {
            Priority priority = new Priority();
            priority.PriorityID = priorityID;
            priority.Name = name;
            priority.Color = color;
            return priority;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PriorityID
        {
            get
            {
                return _PriorityID;
            }
            set
            {
                if (_PriorityID != value)
                {
                    OnPriorityIDChanging(value);
                    ReportPropertyChanging("PriorityID");
                    _PriorityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PriorityID");
                    OnPriorityIDChanged();
                }
            }
        }
        private global::System.Int32 _PriorityID;
        partial void OnPriorityIDChanging(global::System.Int32 value);
        partial void OnPriorityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Color
        {
            get
            {
                return _Color;
            }
            set
            {
                OnColorChanging(value);
                ReportPropertyChanging("Color");
                _Color = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Color");
                OnColorChanged();
            }
        }
        private global::System.String _Color;
        partial void OnColorChanging(global::System.String value);
        partial void OnColorChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaskStoreModel", "FK_Tasks_Priorities", "Tasks")]
        public EntityCollection<Task> Tasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task>("TaskStoreModel.FK_Tasks_Priorities", "Tasks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task>("TaskStoreModel.FK_Tasks_Priorities", "Tasks", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaskStoreModel", Name="Tag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tag object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static Tag CreateTag(global::System.Guid id, global::System.String name, global::System.Guid userID)
        {
            Tag tag = new Tag();
            tag.ID = id;
            tag.Name = name;
            tag.UserID = userID;
            return tag;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Color
        {
            get
            {
                return _Color;
            }
            set
            {
                OnColorChanging(value);
                ReportPropertyChanging("Color");
                _Color = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Color");
                OnColorChanged();
            }
        }
        private global::System.String _Color;
        partial void OnColorChanging(global::System.String value);
        partial void OnColorChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaskStoreModel", "FK_Tags_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TaskStoreModel.FK_Tags_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TaskStoreModel.FK_Tags_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TaskStoreModel.FK_Tags_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("TaskStoreModel.FK_Tags_Users", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaskStoreModel", "FK_TaskTags_Tags", "TaskTags")]
        public EntityCollection<TaskTag> TaskTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaskTag>("TaskStoreModel.FK_TaskTags_Tags", "TaskTags");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaskTag>("TaskStoreModel.FK_TaskTags_Tags", "TaskTags", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaskStoreModel", Name="Task")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Task : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Task object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="taskListID">Initial value of the TaskListID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="complete">Initial value of the Complete property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="lastModified">Initial value of the LastModified property.</param>
        public static Task CreateTask(global::System.Guid id, global::System.Guid taskListID, global::System.String name, global::System.Boolean complete, global::System.DateTime created, global::System.DateTime lastModified)
        {
            Task task = new Task();
            task.ID = id;
            task.TaskListID = taskListID;
            task.Name = name;
            task.Complete = complete;
            task.Created = created;
            task.LastModified = lastModified;
            return task;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TaskListID
        {
            get
            {
                return _TaskListID;
            }
            set
            {
                OnTaskListIDChanging(value);
                ReportPropertyChanging("TaskListID");
                _TaskListID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaskListID");
                OnTaskListIDChanged();
            }
        }
        private global::System.Guid _TaskListID;
        partial void OnTaskListIDChanging(global::System.Guid value);
        partial void OnTaskListIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PriorityID
        {
            get
            {
                return _PriorityID;
            }
            set
            {
                OnPriorityIDChanging(value);
                ReportPropertyChanging("PriorityID");
                _PriorityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriorityID");
                OnPriorityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PriorityID;
        partial void OnPriorityIDChanging(Nullable<global::System.Int32> value);
        partial void OnPriorityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Due
        {
            get
            {
                return _Due;
            }
            set
            {
                OnDueChanging(value);
                ReportPropertyChanging("Due");
                _Due = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Due");
                OnDueChanged();
            }
        }
        private Nullable<global::System.DateTime> _Due;
        partial void OnDueChanging(Nullable<global::System.DateTime> value);
        partial void OnDueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Complete
        {
            get
            {
                return _Complete;
            }
            set
            {
                OnCompleteChanging(value);
                ReportPropertyChanging("Complete");
                _Complete = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Complete");
                OnCompleteChanged();
            }
        }
        private global::System.Boolean _Complete;
        partial void OnCompleteChanging(global::System.Boolean value);
        partial void OnCompleteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Website
        {
            get
            {
                return _Website;
            }
            set
            {
                OnWebsiteChanging(value);
                ReportPropertyChanging("Website");
                _Website = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Website");
                OnWebsiteChanged();
            }
        }
        private global::System.String _Website;
        partial void OnWebsiteChanging(global::System.String value);
        partial void OnWebsiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastModified
        {
            get
            {
                return _LastModified;
            }
            set
            {
                OnLastModifiedChanging(value);
                ReportPropertyChanging("LastModified");
                _LastModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModified");
                OnLastModifiedChanged();
            }
        }
        private global::System.DateTime _LastModified;
        partial void OnLastModifiedChanging(global::System.DateTime value);
        partial void OnLastModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LinkedTaskListID
        {
            get
            {
                return _LinkedTaskListID;
            }
            set
            {
                OnLinkedTaskListIDChanging(value);
                ReportPropertyChanging("LinkedTaskListID");
                _LinkedTaskListID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LinkedTaskListID");
                OnLinkedTaskListIDChanged();
            }
        }
        private Nullable<global::System.Guid> _LinkedTaskListID;
        partial void OnLinkedTaskListIDChanging(Nullable<global::System.Guid> value);
        partial void OnLinkedTaskListIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaskStoreModel", "FK_Tasks_Priorities", "Priorities")]
        public Priority Priority
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Priority>("TaskStoreModel.FK_Tasks_Priorities", "Priorities").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Priority>("TaskStoreModel.FK_Tasks_Priorities", "Priorities").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Priority> PriorityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Priority>("TaskStoreModel.FK_Tasks_Priorities", "Priorities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Priority>("TaskStoreModel.FK_Tasks_Priorities", "Priorities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaskStoreModel", "FK_Tasks_TaskLists", "TaskLists")]
        public TaskList TaskList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskList>("TaskStoreModel.FK_Tasks_TaskLists", "TaskLists").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskList>("TaskStoreModel.FK_Tasks_TaskLists", "TaskLists").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TaskList> TaskListReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskList>("TaskStoreModel.FK_Tasks_TaskLists", "TaskLists");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TaskList>("TaskStoreModel.FK_Tasks_TaskLists", "TaskLists", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaskStoreModel", "FK_Tasks_TaskLists2", "TaskLists")]
        public TaskList TaskList1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskList>("TaskStoreModel.FK_Tasks_TaskLists2", "TaskLists").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskList>("TaskStoreModel.FK_Tasks_TaskLists2", "TaskLists").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TaskList> TaskList1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskList>("TaskStoreModel.FK_Tasks_TaskLists2", "TaskLists");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TaskList>("TaskStoreModel.FK_Tasks_TaskLists2", "TaskLists", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaskStoreModel", "FK_TaskTags_Tasks", "TaskTags")]
        public EntityCollection<TaskTag> TaskTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaskTag>("TaskStoreModel.FK_TaskTags_Tasks", "TaskTags");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaskTag>("TaskStoreModel.FK_TaskTags_Tasks", "TaskTags", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaskStoreModel", Name="TaskList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TaskList object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="listTypeID">Initial value of the ListTypeID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="template">Initial value of the Template property.</param>
        public static TaskList CreateTaskList(global::System.Guid id, global::System.String name, global::System.Guid listTypeID, global::System.Guid userID, global::System.Boolean template)
        {
            TaskList taskList = new TaskList();
            taskList.ID = id;
            taskList.Name = name;
            taskList.ListTypeID = listTypeID;
            taskList.UserID = userID;
            taskList.Template = template;
            return taskList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ListTypeID
        {
            get
            {
                return _ListTypeID;
            }
            set
            {
                OnListTypeIDChanging(value);
                ReportPropertyChanging("ListTypeID");
                _ListTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListTypeID");
                OnListTypeIDChanged();
            }
        }
        private global::System.Guid _ListTypeID;
        partial void OnListTypeIDChanging(global::System.Guid value);
        partial void OnListTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Template
        {
            get
            {
                return _Template;
            }
            set
            {
                OnTemplateChanging(value);
                ReportPropertyChanging("Template");
                _Template = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Template");
                OnTemplateChanged();
            }
        }
        private global::System.Boolean _Template;
        partial void OnTemplateChanging(global::System.Boolean value);
        partial void OnTemplateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaskStoreModel", "FK_TaskLists_ListTypes", "ListTypes")]
        public ListType ListType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ListType>("TaskStoreModel.FK_TaskLists_ListTypes", "ListTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ListType>("TaskStoreModel.FK_TaskLists_ListTypes", "ListTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ListType> ListTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ListType>("TaskStoreModel.FK_TaskLists_ListTypes", "ListTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ListType>("TaskStoreModel.FK_TaskLists_ListTypes", "ListTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaskStoreModel", "FK_TaskLists_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TaskStoreModel.FK_TaskLists_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TaskStoreModel.FK_TaskLists_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TaskStoreModel.FK_TaskLists_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("TaskStoreModel.FK_TaskLists_Users", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaskStoreModel", "FK_Tasks_TaskLists", "Tasks")]
        public EntityCollection<Task> Tasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task>("TaskStoreModel.FK_Tasks_TaskLists", "Tasks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task>("TaskStoreModel.FK_Tasks_TaskLists", "Tasks", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaskStoreModel", "FK_Tasks_TaskLists2", "Tasks")]
        public EntityCollection<Task> Tasks1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task>("TaskStoreModel.FK_Tasks_TaskLists2", "Tasks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task>("TaskStoreModel.FK_Tasks_TaskLists2", "Tasks", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaskStoreModel", Name="TaskTag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskTag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TaskTag object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="taskID">Initial value of the TaskID property.</param>
        /// <param name="tagID">Initial value of the TagID property.</param>
        public static TaskTag CreateTaskTag(global::System.Guid id, global::System.Guid taskID, global::System.Guid tagID)
        {
            TaskTag taskTag = new TaskTag();
            taskTag.ID = id;
            taskTag.TaskID = taskID;
            taskTag.TagID = tagID;
            return taskTag;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TaskID
        {
            get
            {
                return _TaskID;
            }
            set
            {
                OnTaskIDChanging(value);
                ReportPropertyChanging("TaskID");
                _TaskID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaskID");
                OnTaskIDChanged();
            }
        }
        private global::System.Guid _TaskID;
        partial void OnTaskIDChanging(global::System.Guid value);
        partial void OnTaskIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TagID
        {
            get
            {
                return _TagID;
            }
            set
            {
                OnTagIDChanging(value);
                ReportPropertyChanging("TagID");
                _TagID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TagID");
                OnTagIDChanged();
            }
        }
        private global::System.Guid _TagID;
        partial void OnTagIDChanging(global::System.Guid value);
        partial void OnTagIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaskStoreModel", "FK_TaskTags_Tags", "Tags")]
        public Tag Tag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("TaskStoreModel.FK_TaskTags_Tags", "Tags").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("TaskStoreModel.FK_TaskTags_Tags", "Tags").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tag> TagReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("TaskStoreModel.FK_TaskTags_Tags", "Tags");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tag>("TaskStoreModel.FK_TaskTags_Tags", "Tags", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaskStoreModel", "FK_TaskTags_Tasks", "Tasks")]
        public Task Task
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("TaskStoreModel.FK_TaskTags_Tasks", "Tasks").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("TaskStoreModel.FK_TaskTags_Tasks", "Tasks").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Task> TaskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("TaskStoreModel.FK_TaskTags_Tasks", "Tasks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Task>("TaskStoreModel.FK_TaskTags_Tasks", "Tasks", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaskStoreModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        public static User CreateUser(global::System.Guid id, global::System.String name, global::System.String password, global::System.String email)
        {
            User user = new User();
            user.ID = id;
            user.Name = name;
            user.Password = password;
            user.Email = email;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaskStoreModel", "FK_ListTypes_Users", "ListTypes")]
        public EntityCollection<ListType> ListTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ListType>("TaskStoreModel.FK_ListTypes_Users", "ListTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ListType>("TaskStoreModel.FK_ListTypes_Users", "ListTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaskStoreModel", "FK_Tags_Users", "Tags")]
        public EntityCollection<Tag> Tags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tag>("TaskStoreModel.FK_Tags_Users", "Tags");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tag>("TaskStoreModel.FK_Tags_Users", "Tags", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaskStoreModel", "FK_TaskLists_Users", "TaskLists")]
        public EntityCollection<TaskList> TaskLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaskList>("TaskStoreModel.FK_TaskLists_Users", "TaskLists");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaskList>("TaskStoreModel.FK_TaskLists_Users", "TaskLists", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
